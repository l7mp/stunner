# Stunner: An ingress gateway for WebRTC
---
# STUN/TURN server config: Make sure to customize the below configurations, see the README.pm for
# more details
apiVersion: v1
kind: ConfigMap
metadata:
  name: stunner-config
  namespace: default
data:
  # * `STUNNER_PUBLIC_ADDR` (no default): The public IP address clients can use to reach
  #   STUNner. By default, the public IP address will be dynamically assigned by the Kubernetes
  #   LoadBalancer service.  The Helm installation script takes care of updating the configuration
  #   with the correct value. However, if installing from the static manifests then the external IP
  #   must be set manually.
  STUNNER_PUBLIC_ADDR: "A.B.C.D"

  # * `STUNNER_PUBLIC_PORT` (default: 3478): The public port used by clients to reach STUNner. It
  #   is important that applications use the public port as found in the configuration, since the
  #   Helm installation scripts may overwrite this configuration. This occurs when the installation
  #   falls back to a NodePort service (i.e., when STUNner fails to obtain an external IP from the
  #   load-balancer). 
  STUNNER_PUBLIC_PORT: "3478"
  
  # * `STUNNER_PORT` (default: 3478): The internal port used by STUNner for communication inside
  #   the cluster. It is safe to set this to the public port.
  STUNNER_PORT: "3478"

  # * `STUNNER_REALM` (default `stunner.l7mp.io`): the REALM used to guide the user agent in
  #   authenticating with STUNner.
  STUNNER_REALM: "stunner.l7mp.io"

  # * `STUNNER_AUTH_TYPE` (default: `plaintext`): the STUN/TURN authentication mode, either
  #   "plaintext" over the username/password pair $STUNNER_USERNAME/$STUNNER_PASSWORD, or
  #   "longterm", using $STUNNER_SECRET. Make sure to customize!
  STUNNER_AUTH_TYPE: "plaintext"

  # * `STUNNER_USERNAME` (default: `user`): the USERNAME attribute clients can use the authenticate
  #    with STUNner over plain-text authentication. Make sure to customize!
  STUNNER_USERNAME: "user1"

  # * `STUNNER_PASSWORD` (default: `pass`): the password clients can use to authenticate with
  #   STUNner over plain-text authentication. Make sure to customize!
  STUNNER_PASSWORD: "passwd1"

  # * `STUNNER_SHARED_SECRET`: the shared secret used for longterm authentication.
  STUNNER_SHARED_SECRET: "my-shared-secret"

  # * `STUNNER_DURATION` (default: `86400`, i.e., one day): the lifetime of STUNner credentials
  # * over longterm authentication.
  STUNNER_DURATION: "86400"

  # * `STUNNER_LOGLEVEL` (default: `all:WARN`): the default log level used by the STUNner daemons.
  STUNNER_LOGLEVEL: "all:INFO"

  # * `STUNNER_MIN_PORT` (default: 10000): smallest relay transport port assigned by STUNner.
  STUNNER_MIN_PORT: "10000"

  # * `STUNNER_MAX_PORT` (default: 20000): highest relay transport port assigned by STUNner.
  STUNNER_MAX_PORT: "20000"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stunner
  namespace: default
spec:
  selector:
    matchLabels:
      app: stunner
  replicas: 1
  template:
    metadata:
      labels:
        app: stunner
    spec:
      containers:
      - name: stunnerd
        image: l7mp/stunnerd:latest
        imagePullPolicy: Always
        command: ["stunnerd"]
        args: ["-c", "/stunnerd.conf"]
        # args: ["-c", "/stunnerd.conf"]
        envFrom:
          - configMapRef:
              name: stunner-config
        env:
        - name: STUNNER_ADDR  # we use the POD IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      # Uncomment this if you want to deploy a sidecar container with stunner to sniff traffic
      # - name: net-debug
      #   image: l7mp/net-debug:latest
      #   command: ["/bin/sh"]
      #   args: ["-c", "while true; do echo hello; sleep 10;done"]

---
apiVersion: v1
kind: Service
metadata:
  name: stunner
  namespace: default
  labels:
    app: stunner
spec:
  ports:
    - port: 3478
      targetPort: 3478
      # nodePort: 30478
      protocol: UDP
      name: stunner-udp
  type: LoadBalancer
  selector:
    app: stunner

---
apiVersion: v1
kind: Service
metadata:
  name: stunner-tcp
  labels:
    app: stunner
spec:
  ports:
    - port: 3478
      targetPort: 3478
      protocol: TCP
      name: stunner-tcp
  type: LoadBalancer
  selector:
    app: stunner

---
# lock down access from the TURN server to anywhere!
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: stunner-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: stunner
  policyTypes:
  - Egress
